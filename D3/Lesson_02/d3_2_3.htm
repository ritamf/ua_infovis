<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <script type="text/javascript" src="http://d3js.org/d3.v6.js"></script>
</head>

<body>
    <div class="div_d3"> </div>

    <button id="sort_button"> Sort </button>

    <script type="text/javascript">

        let animations = [d3.easeCubic, d3.easeLinear, d3.easeCircle, d3.easeElastic, d3.easeBounce];

        let w = 500;
        let h = 150;

        let svg = d3.select("body").append("svg")
            .attr("width", w)
            .attr("height", h);

        let dataset = [];
        for (var i = 0; i < 10 + Math.random() * 10; i++) {
            let newNumber = Math.random() * 30;
            dataset.push(Math.round(newNumber));
        }

        let rects = svg.selectAll("rect")
            .data(dataset)
            .join("rect")
            .attr("x", function (d, i) { return i * (w / dataset.length); })
            .attr("y", function (d) { return h - d * 4; }) // return 0 para grÃ¡fico invertido 
            .attr("width", function () {
                return (w / dataset.length - 1);
            })
            .attr("height", function (d) { return 4 * d; })
            .attr("fill", function (d) { return "rgb(0, 0, " + (d * 10) + ")"; });

        svg.selectAll("text")
            .data(dataset)
            .join("text")
            .text(function (d) {
                return d;
            })
            .attr("x", function (d, i) {
                return i * (w / dataset.length) + (w / dataset.length) / 2 - 9;
            })
            .attr("y", function (d) {
                if (d > 3)
                    return h - (d * 4) + 15; // padding
                return h - (d * 4);
            })
            .attr("stroke", function(d) {return "rgb(" + (170 + d * 10) + ", 0, 0)";})
            .attr("text-achor", "middle");

        rects.on("click", function (e, d) { // event, data
            console.log("The value is " + d);
        });

        //Define sort order flag
        let sortOrder = false;

        //Define sort function
        let sortBarsAndLabels = function (animation) {
            //Flip value of sortOrder
            sortOrder = !sortOrder;

            let time = 500 + Math.random() * 1000;

            svg.selectAll("rect")
                .sort(function (a, b) {
                    if (sortOrder) {
                        return d3.ascending(a, b);
                    } else {
                        return d3.descending(a, b);
                    }
                })
                .transition()             // apply a transition
                .ease(animation)           // control the speed of the transition
                .duration(time)           // apply it over 2000 milliseconds
                .delay(250)
                .attr("x", function (d, i) {
                    return i * (w / dataset.length);
                })
            svg.selectAll("text")
                .sort(function (a, b) {
                    if (sortOrder) {
                        return d3.ascending(a, b);
                    } else {
                        return d3.descending(a, b);
                    }
                })
                .transition()             // apply a transition
                .ease(animation)           // control the speed of the transition
                .duration(time)           // apply it over 2000 milliseconds
                .attr("x", function (d, i) {
                    return i * (w / dataset.length);
                })
        };
        d3.select("#sort_button").on("click", function (e, d) {
            let animation = animations[Math.floor(Math.random() * animations.length)];
            sortBarsAndLabels(animation);
        })


    </script>
</body>

</html>