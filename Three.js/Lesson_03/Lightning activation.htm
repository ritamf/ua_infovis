<html>

<head>
    <script src="https://threejs.org/build/three.js"></script>
</head>

<body>
    <script>
        // Definition of the scene, camera and renderer
        const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);

        const renderer = new THREE.WebGLRenderer();
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);

        // Definition of an object/geometry and camera position
        const geometry = new THREE.SphereGeometry(1, 32, 32);

        var texloader = new THREE.TextureLoader();
        var tex = texloader.load("earth_surface_2048.jpg");
        const material = new THREE.MeshPhongMaterial({ map: tex });
        var materialIsPhong = true; // only useful to turn on/off light by changing material type

        const sphere = new THREE.Mesh(geometry, material);
        scene.add(sphere);
        camera.position.z = 5;

        // add directional light
        dirLight = new THREE.DirectionalLight(0xfffff, 1.0);
        dirLight.position.set(1, 0, 0);
        scene.add(dirLight);

        // add ambient light
        const alight = new THREE.AmbientLight(0x333333);
        scene.add(alight);

        // Event listener that "listens" to the keys that the user clicks on
        document.addEventListener("keydown", onDocumentKeyDown, false);
        function onDocumentKeyDown(event) {
            // Get the key code of the pressed key 
            var keyCode = event.which;
            console.log("tecla " + keyCode);

            if (keyCode == 76) { // L
                // first method: turn on/off light by removind/adding light to the scene
                if (scene.children.indexOf(dirLight) != -1) {
                    scene.remove(dirLight);
                } else {
                    scene.add(dirLight);
                }

                // second method: change material type to give an impression that the light is turning on/off
                // if (materialIsPhong) {
                //     sphere.material = new THREE.MeshBasicMaterial( { color: 0x555555, map:tex } );
                //     materialIsPhong = false;
                // } else {
                //     sphere.material = new THREE.MeshPhongMaterial({ map: tex });
                //     materialIsPhong = true;
                // }
            }

            else if (keyCode == 187) { // +
                dirLight.intensity += 0.25;
            } else if (keyCode == 189) { // -
                dirLight.intensity -= 0.25;
            }

        }

        // Scene rendering
        function render() {
            requestAnimationFrame(render);
            renderer.render(scene, camera);

            // Scene animation
            sphere.rotation.y += 0.0025;
            //sphere.rotation.z +=  0.41;
        }
        render();

    </script>
</body>

</html>